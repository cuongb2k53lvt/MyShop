// Generated by view binder compiler. Do not edit!
package com.example.modelfashion.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.modelfashion.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText edtSearchView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView imgRightIcSearchView;

  @NonNull
  public final LinearLayout linearLayout;

  private ViewSearchBinding(@NonNull ConstraintLayout rootView, @NonNull EditText edtSearchView,
      @NonNull ImageView imageView2, @NonNull ImageView imgRightIcSearchView,
      @NonNull LinearLayout linearLayout) {
    this.rootView = rootView;
    this.edtSearchView = edtSearchView;
    this.imageView2 = imageView2;
    this.imgRightIcSearchView = imgRightIcSearchView;
    this.linearLayout = linearLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edt_search_view;
      EditText edtSearchView = ViewBindings.findChildViewById(rootView, id);
      if (edtSearchView == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.img_right_ic_search_view;
      ImageView imgRightIcSearchView = ViewBindings.findChildViewById(rootView, id);
      if (imgRightIcSearchView == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      return new ViewSearchBinding((ConstraintLayout) rootView, edtSearchView, imageView2,
          imgRightIcSearchView, linearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
